@attribute [Authorize]
@inject DialogService DialogService
@inject NavigationManager NavigationManager

<RadzenTemplateForm TItem="DailyStatus" Data="@model" Submit=@OnSubmit>
    <div class="row .rz-my-auto">
        <div class="col-md-3">
            <RadzenLabel Text="Va a Lavoro" />
        </div>
        <div class="col">
            <RadzenSelectBar class="rz-my-1" @bind-Value=@model.GotoWork ValueProperty="GotoWork" TValue="bool">
                <Items>
                    <RadzenSelectBarItem Text="Si" Value="true" />
                    <RadzenSelectBarItem Text="No" Value="false" />
                </Items>
            </RadzenSelectBar>
        </div>
    </div>
    <div class="row">
        <div class="col-md-3">
            <RadzenLabel Text="Data" />
        </div>
        <div class="col">
            <RadzenDatePicker class="rz-my-1" @bind-Value="@model.Date" Name="Date" ShowTime="false" />
            <RadzenRequiredValidator Text="Data obbligatoria" Component="Date" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-3">
            <RadzenLabel Text="Note" />
        </div>
        <div class="col">
            <RadzenTextBox class="rz-my-1" @bind-Value="@model.Note" Name="Note" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-3"></div>
        <div class="col">
            <RadzenButton class="rz-my-1" Click=@(args => OnClick("Primary button")) Text="Aggiungi dati"
                ButtonStyle="ButtonStyle.Primary" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-3"></div>
        <div class="col">
            <RadzenButton class="rz-my-1" ButtonType="ButtonType.Submit" Text="Salva" />
        </div>
    </div>
</RadzenTemplateForm>
@code {
    [Parameter]
    public DailyStatus Appointment { get; set; }

    DailyStatus model = new DailyStatus();

    protected override void OnParametersSet()
    {
        model = Appointment;
    }

    void OnSubmit(DailyStatus model)
    {
        DialogService.Close(model);
    }
    private void OnClick(string text)
    {
        NavigationManager.NavigateTo($"AddBioMetrics/{model.Date.ToString("s", System.Globalization.CultureInfo.InvariantCulture)}");
    }
}